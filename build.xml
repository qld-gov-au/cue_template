<project name="CUE-template" default="help" basedir=".">

	<description>CUE template</description>

	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist"  location="build/CUE"/>
	<property name="filename" value="CUE-template"/>
	<property name="version" value="3.2"/>

	<tstamp/>


	<target name="help" description="command line help">
		<echo message="use 'ant clean all' to build the CUE template"/>
	</target>


	<target name="init" description="create build directories">
		<mkdir dir="${build}"/>
	</target>


	<target name="stylesheets" depends="init" description="prepare stylesheets">
		<!-- Combine css assets -->
		<echo message="combine CUE presentation stylesheets"/>
		<concat destfile="${build}/qg-combined.css">
			<filelist dir="${src}/cue/css" files="reset.css,typography.css,layout.css,access-links.css,drop-down-menus.css,nav-section.css,page-feedback.css,content.css,forms.css"/>
			<filelist dir="${src}/components/search-results" files="search-results.css"/>
		</concat>

		<!-- Minify CUE stylesheet -->
		<echo message="compress CUE stylesheet"/>
		<java jar="lib/yuicompressor-2.4.2.jar" fork="true" failonerror="true">
			<arg value="-o"/>
			<arg value="${build}/qg.css"/>
			<arg value="${build}/qg-combined.css"/>
		</java>

		<!-- Combine video css assets -->
		<echo message="combine CUE video stylesheets"/>
		<concat destfile="${build}/qg-video-combined.css">
			<filelist dir="${src}/cue/css" files="jquery-ui-1.8.2.core.widget.mouse.slider.css,qg-video.css"/>
		</concat>

		<!-- Minify CUE video stylesheet -->
		<echo message="compress CUE stylesheet"/>
		<java jar="lib/yuicompressor-2.4.2.jar" fork="true" failonerror="true">
			<arg value="-o"/>
			<arg value="${build}/qg-video.css"/>
			<arg value="${build}/qg-video-combined.css"/>
		</java>

		<!-- Combine IE css assets -->
		<echo message="combine IE stylesheets"/>
		<concat destfile="${build}/qg-ie-combined.css">
			<filelist dir="${src}/cue/css" files="qg-ie.css,qg-video-ie.css"/>
		</concat>

		<!-- Minify IE stylesheet -->
		<echo message="compress IE stylesheet"/>
		<java jar="lib/yuicompressor-2.4.2.jar" fork="true" failonerror="true">
			<arg value="-o"/>
			<arg value="${build}/qg-ie.css"/>
			<arg value="${build}/qg-ie-combined.css"/>
		</java>

		<copy file="${src}/cue/css/layout-small.css" todir="${build}"/>
		<copy file="${src}/cue/css/layout-medium.css" todir="${build}"/>
		<copy file="${src}/cue/css/layout-large.css" todir="${build}"/>
	</target>


	<target name="scripts" description="prepare scripts">
		<!-- Combine script assets -->
		<echo message="combine CUE behaviour scripts"/>
		<concat encoding="UTF-8" outputencoding="UTF-8" destfile="${build}/qg-combined.js">
			<filelist dir="${src}/cue/js" files="jquery.keyboard-focus.js,jquery.aria.js,jquery.aria.key-nav.js,jquery.aria.labelledby.js,jquery.nav-section.js,jquery.qg-drop-down.js,jquery.print-link-urls.js,jquery.page-options.js,jquery.languages.js,jquery.fat-footer.js,qg-initialise.js"/>
			<filterchain>
				<!-- UTF8 Byte Order Marks cause problems, remove them -->
				<deletecharacters chars="&#xFEFF;" />
			</filterchain>
		</concat>

		<!-- Minify CUE script -->
		<echo message="compress CUE javascript"/>
		<java jar="lib/yuicompressor-2.4.2.jar" fork="true" failonerror="true">
			<arg value="-o"/>
			<arg value="${build}/qg.js"/>
			<arg value="${build}/qg-combined.js"/>
			<arg value="--charset"/>
			<arg value="utf-8"/>
		</java>

		<!-- Combine video script assets -->
		<echo message="combine CUE video scripts"/>
		<concat encoding="UTF-8" outputencoding="UTF-8" destfile="${build}/qg-video-combined.js">
			<filelist dir="${src}/cue/js" files="lib/adobe.detect-flash.js,lib/jquery-ui-1.8.2.core.widget.mouse.slider.js,qg-video.js"/>
			<filterchain>
				<!-- UTF8 Byte Order Marks cause problems, remove them -->
				<deletecharacters chars="&#xFEFF;" />
			</filterchain>
		</concat>

		<!-- Minify CUE video script -->
		<echo message="compress CUE video javascript"/>
		<java jar="lib/yuicompressor-2.4.2.jar" fork="true" failonerror="true">
			<arg value="-o"/>
			<arg value="${build}/qg-video.js"/>
			<arg value="${build}/qg-video-combined.js"/>
			<arg value="--charset"/>
			<arg value="utf-8"/>
		</java>

		<!-- Combine IE layout script assets -->
		<concat encoding="UTF-8" outputencoding="UTF-8" destfile="${build}/ie-layout-combined.js">
			<filelist dir="${src}/cue/js" files="jquery.resize-events.js,jquery.transformer-layout.js,pxToEm.js"/>
			<filterchain>
				<!-- UTF8 Byte Order Marks cause problems, remove them -->
				<deletecharacters chars="&#xFEFF;" />
			</filterchain>
		</concat>
		<!-- Minify IE layout script -->
		<echo message="compress CUE javascript"/>
		<java jar="lib/yuicompressor-2.4.2.jar" fork="true" failonerror="true">
			<arg value="-o"/>
			<arg value="${build}/ie-layout.js"/>
			<arg value="${build}/ie-layout-combined.js"/>
			<arg value="--charset"/>
			<arg value="utf-8"/>
		</java>
		
	</target>


	<target name="generate-html" description="generate HTML">
		<property name="in" value="${src}\master.html"/>
		<property name="out" value="${build}"/>

		<xslt style="${xsl}" in="${in}" out="${out}/${prefix}-3column.html"/>
		<xslt style="${xsl}" in="${in}" out="${out}/${prefix}-2column.html">
			<param name="columns" expression="2"/>
		</xslt>
		<xslt style="${xsl}" in="${in}" out="${out}/${prefix}-1column.html">
			<param name="columns" expression="1"/>
		</xslt>
		<xslt style="${xsl}" in="${in}" out="${out}/${prefix}-text.html">
			<param name="variant" expression="text-content"/>
		</xslt>
		<xslt style="${xsl}" in="${in}" out="${out}/${prefix}-accessibility.html">
			<param name="variant" expression="accessibility"/>
		</xslt>
		<xslt style="${xsl}" in="${in}" out="${out}/${prefix}-applications.html">
			<param name="variant" expression="applications"/>
		</xslt>
		<xslt style="${xsl}" in="${in}" out="${out}/${prefix}-search-results.html">
			<param name="variant" expression="search-results"/>
		</xslt>
		<xslt style="${xsl}" in="${in}" out="${out}/${prefix}-video.html">
			<param name="variant" expression="video"/>
		</xslt>
	</target>
	

	<target name="assets" description="copy assets for a website">
		<copy file="${src}/cue/images/qg-coa.png" todir="${todir}/cue/images"/>
		<copy file="${src}/cue/images/qg-coa-ie6.png" todir="${todir}/cue/images"/>
		<copy file="${src}/cue/images/qg-coa-print.png" todir="${todir}/cue/images"/>
		<copy file="${src}/cue/images/qg-tagline-footer.png" todir="${todir}/cue/images"/>
		<copy file="${src}/cue/images/favicon.ico" todir="${todir}/cue/images"/>
		<copy file="${src}/cue/images/minus-flat.png" todir="${todir}/cue/images"/>
		<copy file="${src}/cue/images/plus-flat.png" todir="${todir}/cue/images"/>
		<copy file="${src}/cue/images/displacement.png" todir="${todir}/cue/images"/>

		<!-- video files -->
		<copy todir="${todir}/cue/images/video">
			<filelist dir="${src}/cue/images/video" files="
			 displacement.png
			 minus-flat.png
			 plus-flat.png
			 video-control-separator.png
			 video-controls-bg.png
			 video-download-separator.png
			 video-options-bg.png
			 video-progress-bg.png
			 video-progress-loading-bg.png
			 video-progress-playing-bg.png
			 video-scrubber-horiz-alpha-trans.png
			 video-scrubber-horiz-index-trans.png
			 video-scrubber-vert-alpha-trans.png
			 video-scrubber-vert-index-trans.png
			 video-share-bg-hover.png
			 video-share-bg.png
			 video-transcript-bg.png
			 video-ui-sprites.png
			"/>
		</copy>

		<copy file="${build}/qg.css" todir="${todir}/cue/css"/>
		<copy file="${build}/qg-video.css" todir="${todir}/cue/css"/>
		<copy file="${build}/qg-ie.css" todir="${todir}/cue/css"/>
		<copy file="${build}/layout-small.css" todir="${todir}/cue/css"/>
		<copy file="${build}/layout-medium.css" todir="${todir}/cue/css"/>
		<copy file="${build}/layout-large.css" todir="${todir}/cue/css"/>

		<copy file="${build}/qg.js" todir="${todir}/cue/js"/>
		<copy file="${build}/ie-layout.js" todir="${todir}/cue/js"/>
		<copy file="${build}/qg-video.js" todir="${todir}/cue/js"/>
	</target>


	<target name="theme" description="create theme">
		<property name="theme" value="template"/>
		<property name="path" value="examples/"/>

		<!-- apply theme to master template -->
		<xslt style="${src}/themes/${theme}/${theme}.xsl" in="${src}\master.html" out="${build}/${theme}/${theme}-master.html"/>
		
		<!-- generate CUE templates -->
		<antcall target="generate-html">
			<param name="prefix" value="xhtml"/>
			<param name="xsl" value="${src}/xslt/xhtml-1.0-strict.xsl"/>
			<param name="in" value="${build}/${theme}/${theme}-master.html"/>
			<param name="out" value="${dist}/${path}${theme}"/>
		</antcall>
		<antcall target="generate-html">
			<param name="prefix" value="html"/>
			<param name="xsl" value="${src}/xslt/html-4.01-transitional.xsl"/>
			<param name="in" value="${build}/${theme}/${theme}-master.html"/>
			<param name="out" value="${dist}/${path}${theme}"/>
		</antcall>
		
		<!-- clean up theme masters -->
		<delete includeemptydirs="true">
			<fileset dir="${build}/${theme}"/>
		</delete>
		
		<!-- copy CUE assets -->
		<antcall target="assets">
			<param name="todir" value="${dist}/${path}${theme}"/>
		</antcall>
		
		<!-- copy theme assets -->
		<copy todir="${dist}/${path}${theme}/theme">
			<fileset dir="${src}/themes/${theme}" includes="*.css"/>
			<fileset dir="${src}/themes/${theme}" includes="*.js"/>
			<fileset dir="${src}/themes/${theme}" includes="*.png"/>
			<fileset dir="${src}/themes/${theme}" includes="*.jpg"/>
		</copy>
	</target>


	<target name="template" description="build default templates">
		<antcall target="theme">
			<param name="theme" value="template"/>
		</antcall>
	</target>


	<target name="themes" description="build themed templates">
		<antcall target="theme">
			<param name="theme" value="greyscale"/>
		</antcall>
		<antcall target="theme">
			<param name="theme" value="bluesteel"/>
		</antcall>
		<antcall target="theme">
			<param name="theme" value="supergreen"/>
		</antcall>
	</target>


	<target name="test" description="create test site">
		<antcall target="assets">
			<param name="todir" value="${build}/test"/>
		</antcall>

		<copy todir="${build}/test">
			<fileset dir="${src}/test" includes="test*.js"/>
			<fileset dir="${src}/cue/js" includes="pxToEm.js"/>
		</copy>

		<xslt style="${src}/xslt/xhtml-1.0-strict.xsl" in="${src}\master.html" out="${build}/test/xhtml-3column.html">
			<param name="test" expression="true"/>
		</xslt>
		<xslt style="${src}/xslt/xhtml-1.0-strict.xsl" in="${src}\master.html" out="${build}/test/xhtml-2column.html">
			<param name="test" expression="true"/>
			<param name="columns" expression="2"/>
		</xslt>
		<xslt style="${src}/xslt/xhtml-1.0-strict.xsl" in="${src}\master.html" out="${build}/test/xhtml-1column.html">
			<param name="test" expression="true"/>
			<param name="columns" expression="1"/>
		</xslt>
		<xslt style="${src}/xslt/xhtml-1.0-strict.xsl" in="${src}\master.html" out="${build}/test/xhtml-applications.html">
			<param name="test" expression="true"/>
			<param name="variant" expression="applications"/>
		</xslt>
		<xslt style="${src}/xslt/xhtml-1.0-strict.xsl" in="${src}\master.html" out="${build}/test/xhtml-search-results.html">
			<param name="test" expression="true"/>
			<param name="variant" expression="search-results"/>
		</xslt>
		<xslt style="${src}/xslt/html-4.01-transitional.xsl" in="${src}\master.html" out="${build}/test/html-3column.html">
			<param name="test" expression="true"/>
		</xslt>
		<xslt style="${src}/xslt/html-4.01-transitional.xsl" in="${src}\master.html" out="${build}/test/html-2column.html">
			<param name="test" expression="true"/>
			<param name="columns" expression="2"/>
		</xslt>
		<xslt style="${src}/xslt/html-4.01-transitional.xsl" in="${src}\master.html" out="${build}/test/html-1column.html">
			<param name="test" expression="true"/>
			<param name="columns" expression="1"/>
		</xslt>
		<xslt style="${src}/xslt/html-4.01-transitional.xsl" in="${src}\master.html" out="${build}/test/html-applications.html">
			<param name="test" expression="true"/>
			<param name="variant" expression="applications"/>
		</xslt>
		<xslt style="${src}/xslt/html-4.01-transitional.xsl" in="${src}\master.html" out="${build}/test/html-search-results.html">
			<param name="test" expression="true"/>
			<param name="variant" expression="search-results"/>
		</xslt>

		<echo message="Automated testing is not implemented. Open ${build}/test/*.html to view test results."/>
	</target>


	<target name="dist" depends="init" description="create ${dist}">
		<mkdir dir="${dist}"/>
		
		<copy file="${src}/README.txt" todir="${dist}">
			<filterset>
				<filter token="VERSION" value="${version}"/>
			</filterset>
		</copy>
	</target>


	<target name="package" depends="themes,dist" description="package and zip distributable">
		
		<zip destfile="${filename}-${version}.zip" basedir="${dist}">
			<zipfileset dir="." includes="${build}/README.txt" fullpath="README.txt"/>
			<zipfileset dir="${src}/docs" includes="*.doc" prefix="docs"/>
			<zipfileset dir="${src}/resources" includes="**" prefix="resources"/>
		</zip>
	</target>

	<target name="src" depends="src-core,src-windows"/>
	<target name="src-core" description="package and zip src">
		<!-- Basic src distribution (portable to all platforms) -->
		<zip destfile="${filename}-${version}-src.zip">
			<zipfileset dir="${src}" excludes="**/Thumbs.db" prefix="src"/>
			<zipfileset dir="lib" includes="*.jar" prefix="lib"/>
			<zipfileset dir="." includes="build.xml" fullpath="build.xml"/>
		</zip>
		
	</target>
	<target name="src-windows" description="package and zip src for Windows" depends="test-build-for-windows" if="file.exists">
		<!-- Windows src distribution 
			(contains Ant binaries and batch file to make development under Windows easier) -->
		<zip destfile="${filename}-${version}-src-windows.zip">
			<zipfileset dir="${src}" excludes="**/Thumbs.db" prefix="src"/>
			<zipfileset dir="lib" includes="**" prefix="lib"/>
			<zipfileset dir="." includes="build.xml" fullpath="build.xml"/>
			<zipfileset dir="." includes="build-all.bat" fullpath="build-all.bat"/>
		</zip>
	</target>
	<target name="test-build-for-windows">
		<available file="build-all.bat" property="file.exists" value="true" />
	</target>

	<target name="build" depends="stylesheets,scripts,template"/>
	<target name="all" depends="build,test,themes,package,src"/>
	

	<target name="clean" description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
		<delete>
			<fileset dir="." includes="${filename}*.zip"/>
		</delete>
	</target>
</project>
